module Jekyll
  class TagPageGenerator < Generator
    safe true

    def generate(site)
      tags = []
      
      # Collect all tags from notes
      site.collections['notes'].docs.each do |doc|
        if doc.data['tags']
          doc.data['tags'].each do |tag|
            tags << tag unless tags.include?(tag)
          end
        end
      end
      
      # Create a page for each tag
      tags.each do |tag|
        site.pages << TagPage.new(site, site.source, File.join('tag', tag.downcase.gsub(' ', '-')), tag)
      end
    end
  end

  # Tag page template
  class TagPage < Page
    def initialize(site, base, dir, tag)
      @site = site
      @base = base
      @dir = dir
      @name = 'index.html'

      self.process(@name)
      self.read_yaml(File.join(base, '_layouts'), 'tag.html')
      self.data['tag'] = tag
      self.data['title'] = "Topic: #{tag}"
    end
  end
end
